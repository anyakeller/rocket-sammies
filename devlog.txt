Rocket Sammies

e.g. firstL -- TIMESTAMP\n

anyaK -- 2017-05-09 09:26
- created devlog

dhirajP -- 2017-05-13 20:00
- created the initial template html files
- started app.py
- started writing the code for the login.html and the corresponding code in app.py

jamesW -- 2017-05-14 15:55
- Created basic app.py
- Added basic decorators

wilsonB -- 2017-05-14 20:55
- started base CSS stylesheet (replaced inline styles)
- began parent template for pages in which the user is logged in

jamesW -- 2017-05-15 14:03
- Created basic api endpoints
- Added documentation for endpoints

dhirajP -- 2017-05-15 14:00
- added bootstrap cdn to the master template
- started designing dashboard.html with bootstrap grid

anyaK -- 2017-05-16 8:30
- added route for dashboard

wilsonB -- 2017-05-16 14:00
- implemented front-end side of login/register (API calls and basic alerts)

jamesW -- 2017-05-16 15:29
- Added functions for interacting with the classes collection
- Added functions for interacting with the assignments collection

anyaK -- 2017-05-16 15:38
- added temporary navbar

wilsonB -- 2017-05-17 14:00
- converted user_common.html to base.html (parameterized by whether user is
  signed in)
- made login.html extend base.html

dhirajP -- 2017-05-17 01:49
- adding some more css (changing font)
- working up new color scheme
- adding a feature to gradebook chart to have a fixed left column when horizontally scrolling.

jonathanB -- 2017-05-20 12:39
- Added students.py
- Functions for parsing CSV file of students and adding them to database
- Functions for searching for and removing students

wilsonB -- 2017-05-20 01:30
- Created nicer error message boxes (replacing alert boxes)

wilsonB -- 2017-05-20 20:40
- Created base.js with common utility functions
- Started create-class UI in class.html, class.js (create classes, but importing/adding
  students not yet implemented).
- Implemented some redirects (e.g. from pages requiring login to /login, if the
  user is not logged in)

jamesW -- 2017-05-20 19:22
- Added backend routing for individual routes
- Added sample student data for importing
- Fix bug where bson could not get serialized

wilsonB -- 2017-05-21 10:40
- Implemented uploading of CSV file of student data
- Made a convenient interface for adding students to a new class (similar to
  type-ahead)

wilsonB -- 2017-05-21 07:45
- Improved styling of student-selection list and add a select-all/deselect-all button

patelD -- 2017-05-21 07:40
- created oneclass.html template for backend to pass students and assignments into; uses HTML tables to organize
- created routes directed for oneclass.html in app.py

wilsonB -- 2017-05-21 08:00
- Pass students and assignments in the given class to oneclass.html

patelD -- 2017-05-21 08:45
- made some quick little css front-end changes, color schemes, organizing html elements to make templates more user-friendly
- changed navbar background and text colors to fit Mr. Brown's approved color scheme

jonathanB -- 2017-05-21 9:32
- Fixed form problem where form was expanding each time button was clicked

patelD -- 2017-05-22 12:00
- changed a background color
- made collapsable panels, collapse out, instead of collapse in.
- change dimensions of HTML table in class.html
- added sample assignments.html file to work with until a final one can be created by me.
- added a route in app.py that redirects to assignments.html
- created two different html forms for creating assignments (one for single / one for group)
- added javascript connected to those two html forms
- Struggled with connected the backend to frontend for these two... eventually connected backend to the javascript file with jonathan (pair programming)
- still have to get assignments to display in dashboard, and oneclass

wilsonB -- 2017-05-24 01:56
- Move assignment creation from assignment.html to a modal in oneclass.html, and make
  its API calls work
- Include Bootstrap and jQuery JS and CSS in /static/vendor, so that instead of using
  a CDN we have them locally. They are minified so it only slightly increases
  git clone time, and it significantly decreases page load time

jamesW -- 2017-05-24 08:21
- Added assignments to individual class view
- Added assignments to overall dashboard

dhirajP -- 2017-05-24 21:30
- routed assignment modals that were created by james to the dashboard
- added css to the modals, and to the dashboard itself.
- added a quick little favicon that i found
- quick organization css fixes
- added a color-scheme-approved colored bar behind every class name in the dashboard, to make it easier for users to see which assignments were in which classes.
- created a separate modal that triggers from dashboard assignment panels, so that the user can input things in the modal to assign the project to either a certain group of students or to all students individually
- jonathan has basic group creation working in the backend, so I have to connect it with frontend ASAP.

jonathanB -- 2017-05-24 23:18
- Added basic group creation methods
- Will add further functionality as needed

jonathanB -- 2017-05-24 14:06
- Started work on further group functionality
- Rewriting assignment storage in dictionary form

wilsonB -- 2017-05-28 07:37
- Moved code for the student-selection dialog from class.js to library function in base.js,
  for reusability.
- Set up the student selection dialog on /dashboard and fix the modal display (but NOT the
  API call for creating students)

jonathanB -- 2017-05-29 20:29
- Finished up groups.py

jamesW -- 2017-05-30 17:48
- Changed ajax requests to properly send json to the api
- Changed assignment types to strings instead of numbers

anyaK -- 2017-06-1 11:40
- Added download student CSV functionality
